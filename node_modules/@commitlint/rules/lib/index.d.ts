declare const _default: {
    'body-case': import("@commitlint/types").BaseRule<import("@commitlint/types").TargetCaseType, "sync">;
    'body-empty': import("@commitlint/types").BaseRule<never, "sync">;
    'body-leading-blank': import("@commitlint/types").BaseRule<never, "sync">;
    'body-max-length': import("@commitlint/types").BaseRule<number, "sync">;
    'body-max-line-length': import("@commitlint/types").BaseRule<number, "sync">;
    'body-min-length': import("@commitlint/types").BaseRule<number, "sync">;
    'footer-empty': import("@commitlint/types").BaseRule<never, "sync">;
    'footer-leading-blank': import("@commitlint/types").BaseRule<never, "sync">;
    'footer-max-length': import("@commitlint/types").BaseRule<number, "sync">;
    'footer-max-line-length': import("@commitlint/types").BaseRule<number, "sync">;
    'footer-min-length': import("@commitlint/types").BaseRule<number, "sync">;
    'header-case': import("@commitlint/types").BaseRule<"camel-case" | "kebab-case" | "snake-case" | "pascal-case" | "start-case" | "upper-case" | "uppercase" | "sentence-case" | "sentencecase" | "lower-case" | "lowercase" | "lowerCase" | import("@commitlint/types").TargetCaseType[], "sync">;
    'header-full-stop': import("@commitlint/types").BaseRule<string, "sync">;
    'header-max-length': import("@commitlint/types").BaseRule<number, "sync">;
    'header-min-length': import("@commitlint/types").BaseRule<number, "sync">;
    'references-empty': import("@commitlint/types").BaseRule<never, "sync">;
    'scope-case': import("@commitlint/types").BaseRule<"camel-case" | "kebab-case" | "snake-case" | "pascal-case" | "start-case" | "upper-case" | "uppercase" | "sentence-case" | "sentencecase" | "lower-case" | "lowercase" | "lowerCase" | import("@commitlint/types").TargetCaseType[], "sync">;
    'scope-empty': import("@commitlint/types").BaseRule<never, "sync">;
    'scope-enum': import("@commitlint/types").BaseRule<string[], "sync">;
    'scope-max-length': import("@commitlint/types").BaseRule<number, "sync">;
    'scope-min-length': import("@commitlint/types").BaseRule<number, "sync">;
    'signed-off-by': import("@commitlint/types").BaseRule<string, "sync">;
    'subject-case': import("@commitlint/types").BaseRule<"camel-case" | "kebab-case" | "snake-case" | "pascal-case" | "start-case" | "upper-case" | "uppercase" | "sentence-case" | "sentencecase" | "lower-case" | "lowercase" | "lowerCase" | import("@commitlint/types").TargetCaseType[], "sync">;
    'subject-empty': import("@commitlint/types").BaseRule<never, "sync">;
    'subject-full-stop': import("@commitlint/types").BaseRule<string, "sync">;
    'subject-max-length': import("@commitlint/types").BaseRule<number, "sync">;
    'subject-min-length': import("@commitlint/types").BaseRule<number, "sync">;
    'type-case': import("@commitlint/types").BaseRule<"camel-case" | "kebab-case" | "snake-case" | "pascal-case" | "start-case" | "upper-case" | "uppercase" | "sentence-case" | "sentencecase" | "lower-case" | "lowercase" | "lowerCase" | import("@commitlint/types").TargetCaseType[], "sync">;
    'type-empty': import("@commitlint/types").BaseRule<never, "sync">;
    'type-enum': import("@commitlint/types").BaseRule<string[], "sync">;
    'type-max-length': import("@commitlint/types").BaseRule<number, "sync">;
    'type-min-length': import("@commitlint/types").BaseRule<number, "sync">;
};
export default _default;
//# sourceMappingURL=index.d.ts.map